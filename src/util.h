#ifndef UTIL_H
#define UTIL_H

#include <stdint.h>


static unsigned char ascii_to_x16[] = {             // 0123456789
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             0   - 9
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             10  - 19
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             20
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //   _!"#$%&'  30
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  48,  49,  // ()*+,-./01  40
  50,  51,  52,  53,  54,  55,  56,  57,0x00,0x00,  // 23456789:;  50
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // <=>?@ABCDE  60
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // FGHIJKLMNO  70
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // PQRSTUVWXY  80
0x00,0x00,0x00,0x00,0x00,0x00,0x00,   1,   2,   3,  // Z[\]^_`abc  90
   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  // defghijklm  100
  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  // nopqrstuvw  110
  24,  25,  26,   0,   0,   0,   0,   0,   0,0x00,  // xyz         120
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             130
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             140
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             150
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             160
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             170
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             180
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             190
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             200
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             210
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             220
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             230
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //             240 - 249
0x00,0x00,0x00,0x00,0x00,0x00                       //             250 - 255
};
#define FROM_ASCII(ch) ascii_to_x16[ch]

extern void __fastcall__ vsync();
extern int16_t __fastcall__ cbm_k_macptr(unsigned char numbyte, uint8_t* buffer);
extern void screen_set_charset(unsigned char charset);

#endif